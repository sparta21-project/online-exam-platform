services: #컨테이너 단위로 실행할 서비스 목록 정의
  db: #서비스 이름, 자유롭게 지정 가능
    image: mysql:8.0 # 사용할 Docker 이미지(MySQL 8.0 버전이 포함된 리눅스 환경)
    container_name: mysql # 생성 할 컨테이너 이름
    restart: always # 수동 종료 전까지 항상 켜지도록 유지
    ports:
      - "3307:3306" # 호스트:컨테이너 포트 연결
    environment: # 컨테이너에 전달할 환경변수
      MYSQL_ROOT_PASSWORD: root # root 계정 비밀번호 설정, 필수 부분
      MYSQL_DATABASE: onlineexamplatform #컨테이너 시작 시 자동으로 생성할 db 이름, local properties 에 맞춰줘야함
      MYSQL_USER: test
      MYSQL_PASSWORD: test # 이 값이 컨테이너 안에서 mySql 사용자 계정으로 자동 생성 , local properties 에 맞춰줘야함
    volumes: # MySQL의 실제 데이터가 로컬 디스크나 Docker 관리 영역에 따로 저장, volumes 지정 안하면 MySQL 데이터는 컨테이너 안에만 저장됨
      - mysql_data:/var/lib/mysql # 명시적으로 local 경로 지정해도 되지만 굳이 그럴 필요 없으면 기본 볼륨 그대로 사용

  redis:
    image : redis:7.4
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server"] # 컨테이너가 시작될 때 "무슨 명령어를 실행할 것인가"를 덮어쓰기 하기 위한 설정, 필요하면 추가

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes: # 로컬 디스크에 데이터를 보존할 수 있도록 docker가 내부적으로 공간을 만들어 주는 역할
  mysql_data: # 따로 지정해주지 않아도 내부적으로 영구 저장 공간을 자동 생성
  redis-data: